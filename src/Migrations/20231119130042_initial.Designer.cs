// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatrickBotman.Persistence;

#nullable disable

namespace patrick_botman.Migrations
{
    [DbContext(typeof(GifRatingsContext))]
    [Migration("20231119130042_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("PatrickBotman.Persistence.Entities.Gif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GifUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gifs");
                });

            modelBuilder.Entity("patrick_botman.Persistence.Entities.Blacklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GifId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GifId");

                    b.ToTable("Blacklists");
                });

            modelBuilder.Entity("patrick_botman.Persistence.Entities.Blacklist", b =>
                {
                    b.HasOne("PatrickBotman.Persistence.Entities.Gif", "Gif")
                        .WithMany("Blacklist")
                        .HasForeignKey("GifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gif");
                });

            modelBuilder.Entity("PatrickBotman.Persistence.Entities.Gif", b =>
                {
                    b.Navigation("Blacklist");
                });
#pragma warning restore 612, 618
        }
    }
}
